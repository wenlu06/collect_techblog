1.深入剖析Java中的装箱和拆箱
https://www.cnblogs.com/dolphin0520/p/3780005.html
2.Java处理文件BOM头的方式推荐
https://blog.csdn.net/littleatp2008/article/details/6943215
3.Java工程中读取resources目录下properties文件的几种方法
https://blog.csdn.net/Diamond_Tao/article/details/80010225
4.java获取当前路径的几种方法
https://www.cnblogs.com/franson-2016/p/5728280.html
5.Jackson详解一
https://blog.csdn.net/AlanLzz/article/details/73089460
6.JAVA判断时间格式为 "YYYY-MM-DD"
https://blog.csdn.net/X2017_8_26/article/details/78848796
7.CS-Notes
https://cyc2018.github.io/CS-Notes/#/
8.BiConsumer<T,U>用法示例(java8)
https://www.tpyyes.com/a/java/2017/1015/283.html
9.JDK8新特性：使用Optional避免null导致的NullPointerException
https://blog.csdn.net/aitangyong/article/details/54564100
10.JAVA String 中去掉空格的方法
https://blog.csdn.net/Further_way/article/details/73122139
11.Map 的 key、value 是否允许为null
https://www.cnblogs.com/amunote/p/10211760.html
12.for循环中break与continue的区别
https://zhidao.baidu.com/question/228426716.html
13.Unexpected token o in JSON at position 1
https://www.cnblogs.com/cccc1993/p/7928561.html
14.JS arr数组转化成json对象，数据改造并对json对象自定义
https://blog.csdn.net/qq_35430000/article/details/82764495
15.为什么面试要问hashmap 的原理
https://blog.csdn.net/mbshqqb/article/details/79799009
1.【java那些坑】sun.misc.BASE64Decoder包异常问题处理
https://blog.csdn.net/u013781343/article/details/80623583
2正则匹配任意字符（常用正则表达式的书写）
https://blog.csdn.net/ZHANGTAOZAQaq/article/details/28420109
3java之StringUtils
http://blog.sina.com.cn/s/blog_61c9c41e0100q1li.html
1.HashMap源码解析JDK1.8(史上最详细的源码分析)
https://blog.csdn.net/m0_37914588/article/details/82287191
2.搞定java String校招面试题
https://www.cnblogs.com/zengcongcong/p/11335927.html
3.深入理解HashMap（JDK1.8）
https://www.cnblogs.com/debugxw/p/11006892.html
1. 浅谈HashMap中的hash算法
http://ibat.xyz/2017/02/16/%E6%B5%85%E8%81%8AHashMap%E4%B8%AD%E7%9A%84hash%E7%AE%97%E6%B3%95/
2.重新认识HashMap（jdk1.8新增特性）
https://blog.csdn.net/hqy1719239337/article/details/83044599
3.LinkedList源码解析
https://www.cnblogs.com/leskang/p/6029780.html
4.LinkedList 源码分析(JDK 1.8)
http://www.tianxiaobo.com/2018/01/31/LinkedList-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-JDK-1-8/#34-删除
5.JUnit 5 @BeforeAll和@AfterAll的用法
https://majing.io/posts/10000009741162
6.深入理解Java中的重写和重载
https://baijiahao.baidu.com/s?id=1617909160000795954&wfr=spider&for=pc
7.Java的构造方法为啥不能重写
https://zhidao.baidu.com/question/1668501831158182627.html
8.构造函数为何不能用abstract, static, final修饰
https://blog.csdn.net/ciai2984/article/details/78983016
9.为什么String被设计为final
https://blog.csdn.net/u013088059/article/details/54692472
10.String为什么设计成final类
https://www.jianshu.com/p/28a42cb98708
11.https://www.jianshu.com/p/28a42cb98708
https://www.cnblogs.com/ballas/p/8971279.html
